import cv2
import face_recognition
import time

# Load the video file
cap = cv2.VideoCapture('C:/Users/asus/OneDrive/Desktop/Mini Project/Test Subjects/ArdraAshok.mp4')

# Get the frame rate of the video
fps = cap.get(cv2.CAP_PROP_FPS)
frame_interval = int(1000 / fps)  # Convert FPS to milliseconds per frame

print(f"Video Frame Rate: {fps} FPS")

# Check if the video opened successfully
if not cap.isOpened():
    print("Error: Could not open video.")
    exit()

frame_count = 0
while True:
    start_time = time.time()  # Track time at the start of frame processing

    ret, frame = cap.read()

    # Check if frame is read correctly
    if not ret:
        print("End of video or can't retrieve frame.")
        break

    # Optional: Resize the frame for faster processing
    small_frame = cv2.resize(frame, (0, 0), fx=0.5, fy=0.5)

    # Convert the image from BGR to RGB (required by face_recognition)
    rgb_frame = small_frame[:, :, ::-1]

    # Perform face detection every 5 frames
    if frame_count % 5 == 0:
        face_locations = face_recognition.face_locations(rgb_frame)

    # Draw rectangles around detected faces
    for (top, right, bottom, left) in face_locations:
        # Scale back up since the frame was resized to 0.5
        top *= 2
        right *= 2
        bottom *= 2
        left *= 2
        cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2)

    # Display the resulting frame
    cv2.imshow('Video', frame)

    # Calculate the time spent on processing the frame
    elapsed_time = (time.time() - start_time) * 1000  # Convert to milliseconds

    # Wait enough time to sync to real-time playback (account for processing time)
    wait_time = max(1, int(frame_interval - elapsed_time))
    if cv2.waitKey(wait_time) & 0xFF == 13:  # Press Enter to exit
        break

    frame_count += 1

# Release the video capture and close all windows
cap.release()
cv2.destroyAllWindows()


